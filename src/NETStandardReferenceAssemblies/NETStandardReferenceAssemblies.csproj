<Project>

  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  
  <PropertyGroup>
    <TargetFramework>netstandard1.3</TargetFramework>
    <GenerateAssemblyAttribute>false</GenerateAssemblyAttribute>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <TargetPath></TargetPath>
    <ResolveAssemblyReferencesStateFile></ResolveAssemblyReferencesStateFile>
  </PropertyGroup>

  <!-- Skip compile and any other targets that aren't needed -->
  <Target Name="_CopyOutOfDateSourceItemsToOutputDirectory" />
  <Target Name="CoreCompile" />
  <Target Name="PostCompileBinaryModification" />

  <Target Name="AddReferenceAssembliesToContentItemGroup"
          BeforeTargets="AssignTargetPaths"
          DependsOnTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <!--
        Copies all references from NuGet packages to the output directory
      -->
      <Content Include="@(ReferencePath)" Condition=" '%(ReferencePath.NuGetIsFrameworkReference)' != 'true' " KeepMetadata="CopyToOutputDirectory">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Link>$(DestinationSubDirectory)%(Filename)%(Extension)</Link>
        <Visible>false</Visible>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="RemoveIntermediateAssembly"
          AfterTargets="CoreCompile">
    <ItemGroup>
      <!-- Remove the intermediate assembly so it won't be copied to the output directory -->
      <IntermediateAssembly Remove="@(IntermediateAssembly)" />
    </ItemGroup>
  </Target>

  <Target Name="GetTargetPath"
          DependsOnTargets="AssignTargetPaths"
          Returns="@(TargetPathWithTargetPlatformMoniker)">
    <ItemGroup>
      <TargetPathWithTargetPlatformMoniker Include="@(Content)">
        <TargetPlatformMoniker>$(TargetPlatformMoniker)</TargetPlatformMoniker>
        <TargetPlatformIdentifier>$(TargetPlatformIdentifier)</TargetPlatformIdentifier>
      </TargetPathWithTargetPlatformMoniker>
    </ItemGroup>
  </Target>
</Project>
